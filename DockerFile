# Stage 1: Build web interface
FROM node:18 AS web-builder
WORKDIR /build
COPY seanime-web/ .
RUN npm install
RUN npm run build

# Stage 2: Build server
FROM golang:1.23 AS server-builder
WORKDIR /build
COPY . .
COPY --from=web-builder /build/out ./web
ENV CGO_ENABLED=1
RUN go build -o seanime -trimpath -ldflags="-s -w"

# Stage 3: Final image
FROM debian:bullseye-slim

# Install FFmpeg from Jellyfin repo
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        gnupg && \
    curl -fsSL https://repo.jellyfin.org/debian/jellyfin_team.gpg.key | gpg --dearmor -o /usr/share/keyrings/jellyfin-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/jellyfin-archive-keyring.gpg] https://repo.jellyfin.org/debian bullseye main" | tee /etc/apt/sources.list.d/jellyfin.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends jellyfin-ffmpeg6 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app/

# Create downloads directory
RUN mkdir /downloads

# Copy built artifacts
COPY --from=server-builder /build/seanime .
COPY --from=server-builder /build/web ./web/

# Set FFmpeg path
ENV PATH="/usr/lib/jellyfin-ffmpeg/:$PATH"

# Expose default port
EXPOSE 43000

CMD ["./seanime"]
